version: '3'
services:

  # The web server + redis handles the rest api 
  # where clients 
  # 1) register available robots/controls/sensors
  # 2) discover where to look for realtime signals
  #
  web:
    container_name: gp_web 
    build: './docker/flask'
    ports:
     - "8080:80"
    volumes:
     - ./rest-api:/app
    environment:
      - FLASK_APP=main.py
      - FLASK_DEBUG=1
      - 'RUN=flask run --host=0.0.0.0 --port=80'
    # 1) production server
    #command: flask run --host=0.0.0.0 --port=80
    # 2) debug flask server
    command: python main.py
    # 3) keep it alive, for debugging
    #command: sleep 99999999
    logging:
      driver: json-file
      options:
        max-size: "100K"
        max-file: "10"

  # Redis doesn't need to be externally accessible, so no ports
  redis:
    container_name: gp_redis
    image: "redis"
    volumes:
     - ./redis-data:/data
    logging:
      driver: json-file
      options:
        max-size: "100K"
        max-file: "10"

  # The wamp server handles realtime signal communication
  # on the channels registered in the rest api.
  wamp:
    container_name: gp_wamp
    image: "crossbario/crossbar"
    ports:
     - "5555:8080"
    logging:
      driver: json-file
      options:
        max-size: "100K"
        max-file: "10"


version: '3'
services:

  # The web server + redis handles the rest api 
  # where clients 
  # 1) register available robots/controls/sensors
  # 2) discover where to look for realtime signals
  #
  web:
    container_name: gp_web 
    build: './docker/web'
    depends_on:
      - "wamp"
      - "redis"
    ports:
     - "8080:80"
    volumes:
     - ./volumes/web_src:/app
    environment:
      - FLASK_APP=main.py
      - FLASK_DEBUG=1
      - 'RUN=flask run --host=0.0.0.0 --port=80'
    # 1) production server
    #command: flask run --host=0.0.0.0 --port=80
    # 2) debug flask server
    command: python main.py
    # 3) keep it alive, for debugging
    #command: sleep 99999999
    logging:
      driver: json-file
      options:
        max-size: "100K"
        max-file: "10"

  # Redis doesn't need to be externally accessible, so no ports
  redis:
    container_name: gp_redis
    image: "redis"
    volumes:
     - ./volumes/redis:/data
    logging:
      driver: json-file
      options:
        max-size: "100K"
        max-file: "10"

  # The wamp server handles realtime signal communication
  # on the channels registered in the rest api.
  wamp:
    container_name: gp_wamp
    image: "crossbario/crossbar"
    ports:
     - "5555:8080"
    logging:
      driver: json-file
      options:
        max-size: "100K"
        max-file: "10"

  ## Brain: robot processing loops that train and execute robot behaviors
  #brain:
  #  container_name: gp_brain
  #  build: './docker/brain2'
  #  depends_on:
  #    - "wamp"
  #    - "redis"
  #  volumes:
  #   - ./volumes/brain_src:/code
  #   - ./volumes/episodes:/episodes
  #  working_dir: /code
  #  #command: ["/code/main.sh", "8080", "5555"]
  #  command: ["/code/test.sh"] # just run tests
  #  logging:
  #    driver: json-file
  #    options:
  #      max-size: "100K"
  #      max-file: "10"

  # Brain notebooks: jupyter notebooks to prototype/visualize models
  jupyter:
    container_name: gp_jupyter
    build: './docker/brain2'
    depends_on:
      - "wamp"
      - "redis"
    ports:
     - "8888:8888"
    environment:
      - PASSWORD=geppetto
    volumes:
     - ./volumes/notebooks:/notebooks
     - ./volumes/brain_src/brain:/notebooks/brain
    command: ["/bin/bash", "/openai-jupyter-start.sh"]
    #command: ["sleep", "9999999999999"]
    logging:
      driver: json-file
      options:
        max-size: "100K"
        max-file: "10"

